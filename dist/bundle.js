(()=>{"use strict";var t={566:(t,e,i)=>{i.d(e,{Z:()=>s});var n=i(15),o=i.n(n),r=i(645),a=i.n(r)()(o());a.push([t.id,"#game-container{position:absolute;top:0;left:0;padding:0;margin:0;width:100vw;height:100vh;display:flex;align-content:center;align-items:center;justify-content:center;overflow-y:hidden}#game-container canvas{-webkit-tap-highlight-color:rgba(0,0,0,0);user-select:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;margin:0;padding:0}body{overflow-y:hidden}","",{version:3,sources:["webpack://./src/assets/style.scss"],names:[],mappings:"AAAA,gBACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,SAAA,CACA,QAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CAEA,uBAEE,yCAAA,CACA,gBAAA,CACA,iBAAA,CACA,wBAAA,CACA,qBAAA,CACA,QAAA,CACA,SAAA,CAIN,KACE,iBAAA",sourcesContent:["#game-container {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow-y: hidden;\r\n\r\n    canvas {\r\n      // border: 1px solid;\r\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\r\n      user-select: none;\r\n      touch-action: none;\r\n      -webkit-user-select: none;\r\n      -moz-user-select: none;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n}\r\n\r\nbody {\r\n  overflow-y: hidden;\r\n}\r\n"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var i=t(e);return e[2]?"@media ".concat(e[2]," {").concat(i,"}"):i})).join("")},e.i=function(t,i,n){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(n)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(o[a]=!0)}for(var s=0;s<t.length;s++){var h=[].concat(t[s]);n&&o[h[0]]||(i&&(h[2]?h[2]="".concat(i," and ").concat(h[2]):h[2]=i),e.push(h))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}t.exports=function(t){var i,n,o=(n=4,function(t){if(Array.isArray(t))return t}(i=t)||function(t,e){var i=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null!=i){var n,o,r=[],a=!0,s=!1;try{for(i=i.call(t);!(a=(n=i.next()).done)&&(r.push(n.value),!e||r.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==i.return||i.return()}finally{if(s)throw o}}return r}}(i,n)||function(t,i){if(t){if("string"==typeof t)return e(t,i);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(t,i):void 0}}(i,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[1],a=o[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),h="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),l="/*# ".concat(h," */"),c=a.sources.map((function(t){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(t," */")}));return[r].concat(c).concat([l]).join("\n")}return[r].join("\n")}},379:(t,e,i)=>{var n,o=function(){var t={};return function(e){if(void 0===t[e]){var i=document.querySelector(e);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}t[e]=i}return t[e]}}(),r=[];function a(t){for(var e=-1,i=0;i<r.length;i++)if(r[i].identifier===t){e=i;break}return e}function s(t,e){for(var i={},n=[],o=0;o<t.length;o++){var s=t[o],h=e.base?s[0]+e.base:s[0],l=i[h]||0,c="".concat(h," ").concat(l);i[h]=l+1;var u=a(c),f={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(r[u].references++,r[u].updater(f)):r.push({identifier:c,updater:y(f,e),references:1}),n.push(c)}return n}function h(t){var e=document.createElement("style"),n=t.attributes||{};if(void 0===n.nonce){var r=i.nc;r&&(n.nonce=r)}if(Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),"function"==typeof t.insert)t.insert(e);else{var a=o(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,c=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function u(t,e,i,n){var o=i?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(t.styleSheet)t.styleSheet.cssText=c(e,o);else{var r=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(r,a[e]):t.appendChild(r)}}function f(t,e,i){var n=i.css,o=i.media,r=i.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}var d=null,p=0;function y(t,e){var i,n,o;if(e.singleton){var r=p++;i=d||(d=h(e)),n=u.bind(null,i,r,!1),o=u.bind(null,i,r,!0)}else i=h(e),n=f.bind(null,i,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(i)};return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n));var i=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var n=0;n<i.length;n++){var o=a(i[n]);r[o].references--}for(var h=s(t,e),l=0;l<i.length;l++){var c=a(i[l]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}i=h}}}},615:(t,e,i)=>{t.exports=i.p+"ced0f834d238261db232.ogg"},695:(t,e,i)=>{t.exports=i.p+"a7cb585cf61f7dafb028.png"}},e={};function i(n){var o=e[n];if(void 0!==o)return o.exports;var r=e[n]={id:n,exports:{}};return t[n](r,r.exports,i),r.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;i.g.importScripts&&(t=i.g.location+"");var e=i.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");n.length&&(t=n[n.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=t})(),(()=>{var t=function(){function t(){this.enabled=!0;var t=window.AudioContext||window.webkitAudioContext;this.audioContext=new t,this.buffer=this.audioContext.createBuffer(1,1*this.audioContext.sampleRate,this.audioContext.sampleRate),this.channelData=this.buffer.getChannelData(0),this.primaryGainControl=this.audioContext.createGain(),this.primaryGainControl.gain.setValueAtTime(.5,0),this.primaryGainControl.connect(this.audioContext.destination)}return t.prototype.initialize=function(){},t.prototype.playNote=function(t,e,i){if(void 0===t&&(t=150),void 0===e&&(e=.2),void 0===i&&(i=""),this.enabled){var n=this.audioContext.createOscillator();i&&(n.type=i),n.frequency.setValueAtTime(t,this.audioContext.currentTime);var o=this.audioContext.createGain();o.gain.setValueAtTime(1,this.audioContext.currentTime),o.gain.linearRampToValueAtTime(.01,this.audioContext.currentTime+e),n.connect(o),o.connect(this.primaryGainControl),n.start(),n.stop(this.audioContext.currentTime+e)}},t.prototype.playCustomSound=function(t,e,i){var n=this;if(void 0===e&&(e=""),this.enabled){var o=this.audioContext.createOscillator();e&&(o.type=e);var r=0;t.forEach((function(t){o.frequency.setValueAtTime(t.f,n.audioContext.currentTime+r+t.t),r+=t.t}));var a=this.audioContext.createGain();return a.gain.setValueAtTime(1,this.audioContext.currentTime),a.gain.linearRampToValueAtTime(.01,this.audioContext.currentTime+r),o.connect(a),a.connect(this.primaryGainControl),i&&(o.onended=i),o.start(),o.stop(this.audioContext.currentTime+r),o}},t.prototype.loadSound=function(t){return void 0===t&&(t="https://raw.githubusercontent.com/TinaSoltanian/Patatap/master/sounds/bubbles.mp3"),e=this,i=void 0,o=function(){var e,i,n,o;return function(t,e){var i,n,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(o=2&r[0]?n.return:r[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,r[1])).done)return o;switch(n=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,n=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],n=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(r){switch(r.label){case 0:return this.enabled?[4,fetch(t)]:[2];case 1:return[4,r.sent().arrayBuffer()];case 2:return e=r.sent(),[4,this.audioContext.decodeAudioData(e)];case 3:return i=r.sent(),(n=this.audioContext.createBufferSource()).buffer=i,(o=this.audioContext.createGain()).gain.setValueAtTime(1,this.audioContext.currentTime),n.connect(o),o.connect(this.primaryGainControl),n.start(),[2]}}))},new((n=void 0)||(n=Promise))((function(t,r){function a(t){try{h(o.next(t))}catch(t){r(t)}}function s(t){try{h(o.throw(t))}catch(t){r(t)}}function h(e){var i;e.done?t(e.value):(i=e.value,i instanceof n?i:new n((function(t){t(i)}))).then(a,s)}h((o=o.apply(e,i||[])).next())}));var e,i,n,o},t}();function e(t){return Math.floor(Math.random()*t)}function n(t){var e=t.target.getBoundingClientRect();return[t.touches[0].clientX-e.left,t.touches[0].clientY-e.top]}function o(t,e){var i=t.x-e.x,n=t.y-e.y;return Math.sqrt(i*i+n*n)}function r(t,e,i){return void 0===i&&(i=!1),i?180*Math.atan2(e.y-t.y,e.x-t.x)/Math.PI:Math.atan2(e.y-t.y,e.x-t.x)}function a(t,e){return{x:Math.cos(t)*e,y:Math.sin(t)*e}}function s(t){return t*(Math.PI/180)}var h=function(){function e(e){var i=this;this.gameActive=!1,this.lastUpdate=Date.now(),this.updateDiff=Date.now(),this.updateTick=1e3/60,this.diffMulti=this.updateDiff/this.updateTick,this.keyBoardEnabled=!1,this.pressedKeys={},this.mouseEnabled=!1,this.mouseInfo={x:-100,y:-100,mouseDown:!1},this.levels={},this.activeLevel="",this.canvasElement=this.createCanvas(),this.canvasElement.width=e.width?e.width:200,this.gameWidth=this.canvasElement.width,this.canvasElement.height=e.height?e.height:400,this.gameHeight=this.canvasElement.height;var n=e.canvasElementId?document.getElementById(e.canvasElementId):document;n&&n.appendChild(this.canvasElement),this.ctx=this.createContextFromElement(this.canvasElement),this.soundPlayer=new t,e.levels&&e.levels.forEach((function(t){i.levels[t.key]=new t.level({key:t.key,gameRef:i}),""==i.activeLevel&&(i.activeLevel=t.key)})),this.gameLoop=this.gameLoop.bind(this),this.update=this.update.bind(this),this.tick=this.tick.bind(this),this.draw=this.draw.bind(this)}return e.prototype.createCanvas=function(){return document.createElement("canvas")},e.prototype.createContextFromElement=function(t){return t.getContext("2d")},e.prototype.enableMouse=function(){var t=this;this.canvasElement.addEventListener("mousedown",(function(e){t.mouseInfo.mouseDown=!0})),this.canvasElement.addEventListener("mousemove",(function(e){var i;i=function(t){var e=t.target.getBoundingClientRect();return[t.clientX-e.left,t.clientY-e.top]}(e),t.mouseInfo.x=i[0],t.mouseInfo.y=i[1]})),window.addEventListener("mouseup",(function(e){t.mouseInfo.mouseDown=!1})),this.canvasElement.addEventListener("touchstart",(function(e){var i;i=n(e),t.mouseInfo.x=i[0],t.mouseInfo.y=i[1],t.mouseInfo.mouseDown=!0})),this.canvasElement.addEventListener("touchmove",(function(e){var i;i=n(e),t.mouseInfo.x=i[0],t.mouseInfo.y=i[1]})),window.addEventListener("touchend",(function(e){t.mouseInfo.mouseDown=!1}))},e.prototype.enableKeyboard=function(){var t=this;this.keyBoardEnabled||(document.addEventListener("keydown",(function(e){t.pressedKeys[e.code]=!0})),document.addEventListener("keyup",(function(e){t.pressedKeys[e.code]=!1})))},e.prototype.tick=function(){this.updateDiff=Date.now()-this.lastUpdate,this.diffMulti=this.updateDiff/this.updateTick,this.lastUpdate=Date.now()},e.prototype.start=function(){return t=this,e=void 0,n=function(){var t,e;return function(t,e){var i,n,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(o=2&r[0]?n.return:r[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,r[1])).done)return o;switch(n=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,n=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],n=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(i){switch(i.label){case 0:this.soundPlayer.initialize(),this.gameActive=!0,t=0,i.label=1;case 1:return t<Object.keys(this.levels).length?(e=Object.keys(this.levels)[t],this.levels[e].preload?[4,this.levels[e].preload()]:[3,3]):[3,4];case 2:i.sent(),i.label=3;case 3:return t++,[3,1];case 4:return this.levels[this.activeLevel].initialize(),window.requestAnimationFrame(this.gameLoop),[2]}}))},new((i=void 0)||(i=Promise))((function(o,r){function a(t){try{h(n.next(t))}catch(t){r(t)}}function s(t){try{h(n.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,s)}h((n=n.apply(t,e||[])).next())}));var t,e,i,n},e.prototype.update=function(){this.tick(),this.levels[this.activeLevel].update()},e.prototype.draw=function(){this.levels[this.activeLevel].draw()},e.prototype.loadLevel=function(t){this.levels[this.activeLevel].tearDown(),this.activeLevel=t,this.levels[this.activeLevel].initialize()},e.prototype.gameLoop=function(){this.update(),this.draw(),this.gameActive&&window.requestAnimationFrame(this.gameLoop)},e}(),l=function(){function t(t){this.levelKey=t.key,this.gameRef=t.gameRef,this.initialize=this.initialize.bind(this),this.update=this.update.bind(this),this.draw=this.draw.bind(this),this.tearDown=this.tearDown.bind(this)}return t.prototype.preload=function(){return t=this,e=void 0,n=function(){return function(t,e){var i,n,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(o=2&r[0]?n.return:r[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,r[1])).done)return o;switch(n=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,n=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],n=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(t){return[2]}))},new((i=void 0)||(i=Promise))((function(o,r){function a(t){try{h(n.next(t))}catch(t){r(t)}}function s(t){try{h(n.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,s)}h((n=n.apply(t,e||[])).next())}));var t,e,i,n},t.prototype.initialize=function(){},t.prototype.update=function(){},t.prototype.draw=function(){},t.prototype.tearDown=function(){},t}();function c(t){return e=this,i=void 0,o=function(){var e;return function(t,e){var i,n,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(o=2&r[0]?n.return:r[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,r[1])).done)return o;switch(n=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,n=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],n=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(i){switch(i.label){case 0:return[4,new Promise((function(e,i){var n=new Image;n.onload=function(){e(n)},n.onerror=function(t){i(t)},n.src=t.sprite}))];case 1:return e=i.sent(),t.img=e,[2,t]}}))},new((n=void 0)||(n=Promise))((function(t,r){function a(t){try{h(o.next(t))}catch(t){r(t)}}function s(t){try{h(o.throw(t))}catch(t){r(t)}}function h(e){var i;e.done?t(e.value):(i=e.value,i instanceof n?i:new n((function(t){t(i)}))).then(a,s)}h((o=o.apply(e,i||[])).next())}));var e,i,n,o}function u(t){var e=t.c,i=t.x,n=t.y,o=t.toX,r=t.toY,a=t.strokeWidth,s=t.strokeColor;e.beginPath(),e.moveTo(i,n),e.lineTo(o,r),e.strokeStyle=s,e.lineWidth=a,e.stroke()}function f(t){var e=t.c,i=t.x,n=t.y,o=t.radius,r=t.startAngle,a=t.endAngle,h=t.fillColor,l=t.strokeWidth,c=t.strokeColor;e.beginPath(),e.arc(i,n,o,r?s(r):0,a?s(a):2*Math.PI),h&&(e.fillStyle=h,e.fill()),l&&c&&(e.strokeStyle=c,e.lineWidth=l,e.stroke())}function d(t){var e=t.c,i=t.x,n=t.y,o=t.fillColor,r=t.strokeWidth,a=t.strokeColor,s=t.text,h=t.fontFamily,l=t.fontSize,c=t.align,u=t.style,f=t.weight;e.textAlign=c||"center",e.font=(u?u+" ":"")+(f?f+" ":"")+l+"px "+h,o&&(e.fillStyle=o,e.fillText(s,i,n)),r&&a&&(e.strokeStyle=a,e.lineWidth=r,e.strokeText(s,i,n))}var p,y=function(){function t(t){this.x=0,this.y=0,this.objectKey=t.key,this.gameRef=t.gameRef,this.initialize=this.initialize.bind(this),this.update=this.update.bind(this),this.draw=this.draw.bind(this),this.tearDown=this.tearDown.bind(this)}return t.prototype.initialize=function(){},t.prototype.update=function(){},t.prototype.draw=function(){},t.prototype.tearDown=function(){},t}(),g=(p=function(t,e){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function i(){this.constructor=t}p(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),m=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.active=!1,e.target={x:0,y:0},e.speed=15,e.radius=6,e.velocity={x:0,y:0},e.maxDistance=800,e.traveled=0,e.lastShot=0,e.shotDelay=600,e}return g(e,t),e.prototype.initialize=function(){},e.prototype.update=function(){this.active&&this.traveled<this.maxDistance?(this.x+=this.velocity.x,this.y+=this.velocity.y,this.traveled+=Math.abs(this.velocity.x)+Math.abs(this.velocity.y)):(this.velocity={x:0,y:0},this.active=!1,this.traveled=0)},e.prototype.setVelocityToTarget=function(){var t=this.gameRef.diffMulti,e=o(this,this.target),i=this.speed*t;this.velocity={x:i/e*(this.target.x-this.x),y:i/e*(this.target.y-this.y)}},e.prototype.fire=function(t,e){!this.active&&this.gameRef.lastUpdate-this.lastShot>=this.shotDelay&&(this.x=t.x,this.y=t.y,this.target=e,this.setVelocityToTarget(),this.active=!0,this.traveled=0,this.lastShot=this.gameRef.lastUpdate,this.gameRef.soundPlayer.playNote(-150,.3,"square"))},e.prototype.draw=function(t){void 0===t&&(t={x:0,y:0}),this.active&&f({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,fillColor:"gold",radius:this.radius,strokeColor:"rgba(255,255,255,.5)",strokeWidth:2})},e}(y),v=i(615),x=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),b=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.target={x:0,y:0},e.radius=15,e.speed=7,e.health=10,e.maxHealth=10,e.lastHit=0,e.damageBuffer=100,e.hovered=!1,e.focused=!1,e.collision=!1,e.onCollision=function(){},e.velocity={x:0,y:0},e.shootingHand={x:0,y:0,radius:5,fillColor:"#55dafd",currentAngle:0,angleSpeed:5},e.nearestTarget={x:0,y:0},e}return x(e,t),e.prototype.initialize=function(){this.target={x:this.x,y:this.y}},e.prototype.update=function(){var t=this;this.target.active&&this.moveTo(this.target,(function(){t.target.active=!1}));var e=r(this,this.nearestTarget,!0),i=this.shootingHand.angleSpeed*this.gameRef.diffMulti,n=(e-this.shootingHand.currentAngle+540)%360-180;n>0?this.shootingHand.currentAngle+=n>i?i:n:n<0&&(this.shootingHand.currentAngle-=n<i?i:-n),this.hovered=o(this,this.gameRef.mouseInfo)<=this.radius},e.prototype.moveTo=function(t,e){void 0===e&&(e=function(){});var i=o(this,t);if(i>this.radius){var n=this.speed*this.gameRef.diffMulti;this.velocity={x:n/i*(t.x-this.x),y:n/i*(t.y-this.y)},this.x+=this.velocity.x,this.y+=this.velocity.y}else this.velocity={x:0,y:0},e()},e.prototype.draw=function(t){void 0===t&&(t={x:0,y:0}),f({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,radius:this.radius,fillColor:this.lastHit+500>this.gameRef.lastUpdate?"orange":"#55dafd",strokeWidth:2,strokeColor:"rgba(255,255,255,.5)"});var e=a(s(this.shootingHand.currentAngle),this.radius+this.shootingHand.radius);this.shootingHand.x=e.x+this.x,this.shootingHand.y=e.y+this.y,f({c:this.gameRef.ctx,x:t.x+this.x+e.x,y:t.y+this.y+e.y,radius:this.shootingHand.radius,fillColor:this.shootingHand.fillColor}),this.target.active&&f({c:this.gameRef.ctx,x:t.x+this.target.x,y:t.y+this.target.y,radius:20,strokeWidth:2,strokeColor:"yellow"})},e.prototype.damage=function(t){this.lastHit+this.damageBuffer>this.gameRef.lastUpdate||(this.health-=t,this.lastHit=this.gameRef.lastUpdate,this.health<=0&&this.gameRef.soundPlayer.loadSound(v))},e}(y),w=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),A=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.speed=1,e.baseSpeed=1,e.fastSpeed=3,e.aggroRange=250,e.radius=10,e.health=2,e.maxHealth=2,e.damageBuffer=100,e.alternateTarget={x:0,y:0,active:!1},e.healthColors=["#000","#ce192b","pink"],e}return w(e,t),e.prototype.initialize=function(){this.health=2},e.prototype.update=function(){var t=this;o(this,this.target)<this.aggroRange?(this.speed=this.fastSpeed,this.alternateTarget.active=!1):this.speed=this.baseSpeed,this.alternateTarget.active?this.moveTo(this.alternateTarget,(function(){t.alternateTarget.active=!1})):this.moveTo(this.target)},e.prototype.draw=function(t){void 0===t&&(t={x:0,y:0}),f({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,radius:this.radius,fillColor:"rgb(255,0,"+(this.maxHealth-this.health>=0?(this.maxHealth-this.health)/this.maxHealth*255:0)+")",strokeWidth:2,strokeColor:"rgba(255,255,255,.5)"})},e}(b),C=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),R=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e.score=0,e.cameraPos={x:0,y:0},e.levelWidth=2e3,e.levelHeight=2e3,e.bgValues={r:64,g:244,b:208},e.colorSpeed=5,e}return C(i,t),i.prototype.initialize=function(){this.score=0,this.gameRef.soundPlayer.loadSound(v),this.mainTroopa=new b({key:"main-troopa",gameRef:this.gameRef}),this.mainTroopa.x=100,this.mainTroopa.y=100,this.mainTroopa.health=10,this.loadBaddies(10),this.mainTroopa.initialize(),this.shots=new m({key:"main-shot",gameRef:this.gameRef}),this.shots.initialize()},i.prototype.loadBaddies=function(t){var i=this;void 0===t&&(t=10),this.badTroopas=new Array(t).fill("").map((function(t,n){var o=new A({key:"bad-troopa-"+n,gameRef:i.gameRef});return o.initialize(),o.target=i.mainTroopa,o.x=100+e(i.levelWidth),o.y=100+e(i.levelHeight),e(2)>0?(o.radius=16,o.maxHealth=3,o.health=3):(o.baseSpeed=2,o.fastSpeed=4),o}))},i.prototype.update=function(){var t,i=this;this.mainTroopa.collision=!1,this.mainTroopa.update(),this.gameRef.mouseInfo.mouseDown&&(this.mainTroopa.target={x:this.gameRef.mouseInfo.x-this.cameraPos.x,y:this.gameRef.mouseInfo.y-this.cameraPos.y,active:!0},this.mainTroopa.target.x<0&&(this.mainTroopa.target.x=0),this.mainTroopa.target.x>this.levelWidth&&(this.mainTroopa.target.x=this.levelWidth),this.mainTroopa.target.y<0&&(this.mainTroopa.target.y=0),this.mainTroopa.target.y>this.levelHeight&&(this.mainTroopa.target.y=this.levelHeight)),this.updateCamera();var n=1e3,h=0;if(this.badTroopas.forEach((function(r,a){if(!(r.health<=0)){r.collision=!1,r.update(),h++;var s=o(i.mainTroopa,r);if(s<=i.mainTroopa.radius+r.radius&&(i.mainTroopa.collision=!0,(l=Math.abs(r.velocity.x)+Math.abs(r.velocity.y))&&(i.mainTroopa.x+=r.velocity.x/l*10,i.mainTroopa.y+=r.velocity.y/l*10),i.mainTroopa.damage(1),i.gameRef.soundPlayer.playNote(100,.3,"square")),s<n&&(t=r,n=s),i.shots.active&&o(i.shots,r)<=i.shots.radius+r.radius){i.shots.active=!1,r.damage(1),i.gameRef.soundPlayer.playNote(50,.3,"square"),i.score++;var l=Math.abs(i.shots.velocity.x)+Math.abs(i.shots.velocity.y);r.x+=i.shots.velocity.x/l*10,r.y+=i.shots.velocity.y/l*10}i.badTroopas.forEach((function(t,i){i!==a&&t.health>0&&!t.alternateTarget.active&&o(t,r)<=30&&(t.alternateTarget={x:t.target.x+e(50)-25,y:t.target.y+e(50)-25,active:!0})}))}})),this.shots.update(),t){if(o(a(r(this.mainTroopa,t),this.mainTroopa.radius),a(s(this.mainTroopa.shootingHand.currentAngle),this.mainTroopa.radius))<1){var l=a(r(this.mainTroopa,t),this.shots.maxDistance);this.shots.fire(this.mainTroopa.shootingHand,{x:l.x+this.mainTroopa.x,y:l.y+this.mainTroopa.y})}this.mainTroopa.nearestTarget=t}0===h&&(this.randomizeBg(),this.loadBaddies(this.badTroopas.length+10)),this.mainTroopa.health<=0&&(localStorage.setItem("last-score",""+this.score),this.gameRef.loadLevel("start-screen"))},i.prototype.updateCamera=function(){this.cameraPos={x:-(this.mainTroopa.x-this.gameRef.gameWidth/2),y:-(this.mainTroopa.y-this.gameRef.gameHeight/2)},this.gameRef.gameWidth<this.levelWidth?(this.cameraPos.x>0&&(this.cameraPos.x=0),this.cameraPos.x-this.gameRef.gameWidth<-1*this.levelWidth&&(this.cameraPos.x=-(this.levelWidth-this.gameRef.gameWidth))):this.cameraPos.x=(this.gameRef.gameWidth-this.levelWidth)/2,this.gameRef.gameHeight<this.levelHeight?(this.cameraPos.y>0&&(this.cameraPos.y=0),this.cameraPos.y-this.gameRef.gameHeight<-1*this.levelHeight&&(this.cameraPos.y=-(this.levelHeight-this.gameRef.gameHeight))):this.cameraPos.y=(this.gameRef.gameHeight-this.levelHeight)/2},i.prototype.updateBg=function(){var t=this.bgValues,i=t.r,n=t.g,o=t.b,r=this.colorSpeed*this.gameRef.diffMulti;i=(i+=(e(3)-1)*r)<0?0:i>255?255:i,n=(n+=(e(3)-1)*r)<0?0:n>255?255:n,o=(o+=(e(3)-1)*r)<0?0:o>255?255:o,this.bgValues={r:i,g:n,b:o}},i.prototype.randomizeBg=function(){var t=this.bgValues,i=t.r,n=t.g,o=t.b;i+=e(256),n+=e(256),o+=e(256),this.bgValues={r:i,g:n,b:o}},i.prototype.drawBg=function(){for(var t=200,e=200,i=this.gameRef.gameWidth>this.levelWidth?this.levelWidth:this.gameRef.gameWidth,n=this.gameRef.gameHeight>this.levelHeight?this.levelHeight:this.gameRef.gameHeight,o=i==this.levelWidth?this.cameraPos.x:this.cameraPos.x%t,r=n==this.levelHeight?this.cameraPos.y:this.cameraPos.y%e,a=0;a<i/t+1;a++)for(var s=0;s<n/e+1;s++){this.gameRef.ctx.beginPath();var h=(a*t-this.cameraPos.x+this.cameraPos.x%t)/this.levelWidth,l=(s*e-this.cameraPos.y+ +this.cameraPos.y%t)/this.levelHeight;this.gameRef.ctx.rect(a*t+o,s*e+r,201,201),this.gameRef.ctx.fillStyle="rgba("+h*this.bgValues.r+","+(h+l)/(this.levelWidth+this.levelHeight)*this.bgValues.g+","+l*this.bgValues.b+",1)",this.gameRef.ctx.fill()}for(a=0;a<i/t+1;a++)u({c:this.gameRef.ctx,x:a*t+this.cameraPos.x%t,y:0,toX:a*t+this.cameraPos.x%t,toY:this.gameRef.gameHeight,strokeWidth:1,strokeColor:"rgba(255,255,255,.2)"});for(s=0;s<n/e+1;s++)u({c:this.gameRef.ctx,x:0,y:s*e+this.cameraPos.y%e,toX:this.gameRef.gameWidth,toY:s*e+this.cameraPos.y%e,strokeWidth:1,strokeColor:"rgba(255,255,255,.2)"})},i.prototype.draw=function(){var t=this;this.gameRef.ctx.beginPath(),this.gameRef.ctx.rect(0,0,this.gameRef.gameWidth,this.gameRef.gameHeight),this.gameRef.ctx.fillStyle="#eee",this.gameRef.ctx.fill(),this.drawBg(),this.mainTroopa.draw(this.cameraPos),this.badTroopas.forEach((function(e){e.health<=0||e.draw(t.cameraPos)})),this.shots.draw(this.cameraPos),this.mainTroopa.health>0&&(this.gameRef.ctx.beginPath(),this.gameRef.ctx.rect(30,30,this.mainTroopa.health/10*100,10),this.gameRef.ctx.fillStyle="#ce192b",this.gameRef.ctx.fill()),d({c:this.gameRef.ctx,x:30,y:60,align:"left",fontSize:16,fontFamily:"sans-serif",fillColor:"#fff",strokeColor:"#000",strokeWidth:3,text:"Score: "+this.score}),d({c:this.gameRef.ctx,x:30,y:60,align:"left",fontSize:16,fontFamily:"sans-serif",fillColor:"#fff",text:"Score: "+this.score})},i}(l),S=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),T=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.x=0,e.y=0,e.width=100,e.height=50,e.fillColor="#777",e.hoverColor="#333",e.focusColor="#000",e.strokeWidth=0,e.strokeColor="",e.hovered=!1,e.focused=!1,e.textColor="#fff",e.buttonText="Click Me",e.style="",e.weight="bold",e.fontSize=16,e.fontFamily="sans-serif",e.clickFunction=function(){return null},e.holdFunction=function(){return null},e}return S(e,t),e.prototype.initialize=function(){},e.prototype.update=function(){var t=this.x,e=this.y,i=this.x+this.width,n=this.y+this.height,o=this.gameRef.mouseInfo,r=o.x,a=o.y;this.hovered=r>t&&r<i&&a>e&&a<n,this.hovered&&this.gameRef.mouseInfo.mouseDown?(this.focused=!0,this.holdFunction()):this.hovered&&this.focused&&!this.gameRef.mouseInfo.mouseDown?(this.clickFunction(),this.focused=!1):this.focused=!1},e.prototype.draw=function(){var t,e,i,n,o,r,a,s,h;i=(t={c:this.gameRef.ctx,x:this.x,y:this.y,width:this.width,height:this.height,fillColor:this.hovered&&this.focused?this.focusColor:this.hovered?this.hoverColor:this.fillColor}).x,n=t.y,o=t.width,r=t.height,a=t.fillColor,s=t.strokeWidth,h=t.strokeColor,(e=t.c).beginPath(),e.rect(i,n,o,r),a&&(e.fillStyle=a,e.fill()),s&&h&&(e.strokeStyle=h,e.lineWidth=s,e.stroke()),d({c:this.gameRef.ctx,x:(this.x+this.x+this.width)/2,y:(this.y+this.y+this.height)/2+this.fontSize/3,align:"center",fillColor:this.textColor,style:this.style,weight:this.weight,fontFamily:this.fontFamily,fontSize:16,text:this.buttonText})},e}(y),k=i(695),P=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),H=[{f:0,t:0},{f:150,t:.2},{f:200,t:.2},{f:300,t:.5},{f:400,t:.2},{f:300,t:.1},{f:100,t:1},{f:150,t:.2},{f:200,t:.1},{f:150,t:.2},{f:200,t:.1},{f:150,t:.2},{f:200,t:.1},{f:150,t:.2},{f:200,t:.1},{f:50,t:2},{f:-50,t:3}],E=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e.highScore=0,e.lastScore=0,e.newHighScore=!1,e.bgValues={r:64,g:244,b:208},e.colorSpeed=2,e.activeSound={playing:!1,soundRef:null},e}return P(i,t),i.prototype.preload=function(){return t=this,e=void 0,n=function(){var t;return function(t,e){var i,n,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,n&&(o=2&r[0]?n.return:r[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,r[1])).done)return o;switch(n=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,n=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],n=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(e){switch(e.label){case 0:return this.star={c:this.gameRef.ctx,sprite:k,sx:0,sy:0,sWidth:32,sHeight:32,dx:0,dy:0,dWidth:64,dHeight:64,frame:0},t=this,[4,c(this.star)];case 1:return t.star=e.sent(),[2]}}))},new((i=void 0)||(i=Promise))((function(o,r){function a(t){try{h(n.next(t))}catch(t){r(t)}}function s(t){try{h(n.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,s)}h((n=n.apply(t,e||[])).next())}));var t,e,i,n},i.prototype.initialize=function(){var t=this;this.newHighScore=!1,this.startButton=new T({key:"start-button",gameRef:this.gameRef}),this.startButton.fillColor="#ce192b",this.startButton.x=100,this.startButton.y=this.gameRef.gameHeight-100,this.startButton.buttonText="Start Game",this.startButton.width=this.gameRef.gameWidth-200,this.startButton.clickFunction=function(){t.gameRef.soundPlayer.playNote(900,.4,"square"),t.gameRef.loadLevel("troopa1-1")};var e=localStorage.getItem("hi-score"),i=localStorage.getItem("last-score");i&&(this.lastScore=Number(i)),e&&(this.highScore=Number(e)),this.lastScore>this.highScore&&(this.highScore=this.lastScore,this.newHighScore=!0,localStorage.setItem("hi-score",""+this.highScore))},i.prototype.handleSounds=function(){var t=this;0==this.activeSound.playing&&(this.activeSound.soundRef=this.gameRef.soundPlayer.playCustomSound(H,"square",(function(){t.activeSound.playing=!1})),this.activeSound.playing=!0)},i.prototype.update=function(){this.updateBg(),this.handleSounds(),this.startButton.update()},i.prototype.updateBg=function(){var t=this.bgValues,i=t.r,n=t.g,o=t.b,r=this.colorSpeed*this.gameRef.diffMulti;i=(i+=(e(3)-1)*r)<0?0:i>255?255:i,n=(n+=(e(3)-1)*r)<0?0:n>255?255:n,o=(o+=(e(3)-1)*r)<0?0:o>255?255:o,this.bgValues={r:i,g:n,b:o}},i.prototype.drawBg=function(){this.gameRef.ctx.beginPath(),this.gameRef.ctx.rect(0,0,this.gameRef.gameWidth,this.gameRef.gameHeight),this.gameRef.ctx.fillStyle="rgba("+this.bgValues.r+","+this.bgValues.g+","+this.bgValues.b+",1)",this.gameRef.ctx.fill()},i.prototype.draw=function(){var t,e,i,n,o,r,a,s,h,l,c;this.gameRef.ctx.beginPath(),this.gameRef.ctx.rect(0,0,this.gameRef.gameWidth,this.gameRef.gameHeight),this.gameRef.ctx.fillStyle="#eee",this.gameRef.ctx.fill(),this.drawBg(),this.startButton.draw(),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:200,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"900",fontFamily:"sans-serif",fontSize:40,text:"TROOPAS"}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:275,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"bold",fontFamily:"sans-serif",fontSize:this.newHighScore?25:20,text:(this.newHighScore?"New High ":"")+"Score: "+this.lastScore}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:320,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"bold",fontFamily:"sans-serif",fontSize:15,text:"Hi Score: "+this.highScore}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:200,align:"center",fillColor:"#000",style:"",weight:"900",fontFamily:"sans-serif",fontSize:40,text:"TROOPAS"}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:275,align:"center",fillColor:"#000",style:"",weight:"bold",fontFamily:"sans-serif",fontSize:this.newHighScore?25:20,text:(this.newHighScore?"New High ":"")+"Score: "+this.lastScore}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:320,align:"center",fillColor:"#000",style:"",weight:"bold",fontFamily:"sans-serif",fontSize:15,text:"Hi Score: "+this.highScore}),e=(t=this.star).c,t.sprite,i=t.sx,n=t.sy,o=t.sWidth,r=t.sHeight,a=t.dx,s=t.dy,h=t.dWidth,l=t.dHeight,c=t.img,e.drawImage(c,i,n,o,r,a,s,h,l)},i.prototype.tearDown=function(){this.startButton.tearDown()},i}(l),W=i(379),B=i.n(W),_=i(566);B()(_.Z,{insert:"head",singleton:!1}),_.Z.locals;var O=document.getElementById("start-game"),I=document.getElementById("audio-b");O&&I&&I&&O.addEventListener("click",(function(){var t;I.play(),(t=new h({canvasElementId:"game-container",width:window.innerWidth,height:window.innerHeight,levels:[{key:"start-screen",level:E},{key:"troopa1-1",level:R}]})).enableMouse(),t.enableKeyboard(),t.start(),O.remove(),setTimeout((function(){I.remove()}),500)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,