(()=>{"use strict";var t={566:(t,e,n)=>{n.d(e,{Z:()=>s});var i=n(15),o=n.n(i),r=n(645),a=n.n(r)()(o());a.push([t.id,"#game-container{position:absolute;top:0;left:0;padding:0;margin:0;width:100vw;height:100vh;display:flex;align-content:center;align-items:center;justify-content:center;overflow-y:hidden;flex-direction:column;font-family:sans-serif}#game-container #game-description{width:100%;text-align:center;margin-bottom:20px;max-width:300px}#game-container #game-description p{line-height:1.4em;font-size:1em}#game-container #start-game{padding:10px 20px;background:#eee;border:1px solid #333;font-size:1em}#game-container canvas{-webkit-tap-highlight-color:rgba(0,0,0,0);user-select:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;margin:0;padding:0}body{overflow-y:hidden}","",{version:3,sources:["webpack://./src/assets/style.scss"],names:[],mappings:"AAAA,gBACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,SAAA,CACA,QAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CACA,qBAAA,CACA,sBAAA,CAEA,kCACE,UAAA,CACA,iBAAA,CACA,kBAAA,CACA,eAAA,CACA,oCACE,iBAAA,CACA,aAAA,CAIJ,4BACE,iBAAA,CACA,eAAA,CACA,qBAAA,CACA,aAAA,CAGF,uBAEE,yCAAA,CACA,gBAAA,CACA,iBAAA,CACA,wBAAA,CACA,qBAAA,CACA,QAAA,CACA,SAAA,CAIN,KACE,iBAAA",sourcesContent:["#game-container {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow-y: hidden;\r\n    flex-direction: column;\r\n    font-family: sans-serif;\r\n\r\n    #game-description {\r\n      width: 100%;\r\n      text-align: center;\r\n      margin-bottom: 20px;\r\n      max-width: 300px;\r\n      p {\r\n        line-height: 1.4em;\r\n        font-size: 1em;\r\n      }\r\n    }\r\n\r\n    #start-game {\r\n      padding: 10px 20px;\r\n      background: #eee;\r\n      border: 1px solid #333;\r\n      font-size: 1em;\r\n    }\r\n\r\n    canvas {\r\n      // border: 1px solid;\r\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\r\n      user-select: none;\r\n      touch-action: none;\r\n      -webkit-user-select: none;\r\n      -moz-user-select: none;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n}\r\n\r\nbody {\r\n  overflow-y: hidden;\r\n}\r\n"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,i){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(i)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(o[a]=!0)}for(var s=0;s<t.length;s++){var u=[].concat(t[s]);i&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),e.push(u))}},e}},15:t=>{function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}t.exports=function(t){var n,i,o=(i=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){var n=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null!=n){var i,o,r=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(i=n.next()).done)&&(r.push(i.value),!e||r.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return r}}(n,i)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?e(t,n):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[1],a=o[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(u," */"),h=a.sources.map((function(t){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(t," */")}));return[r].concat(h).concat([c]).join("\n")}return[r].join("\n")}},379:(t,e,n)=>{var i,o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),r=[];function a(t){for(var e=-1,n=0;n<r.length;n++)if(r[n].identifier===t){e=n;break}return e}function s(t,e){for(var n={},i=[],o=0;o<t.length;o++){var s=t[o],u=e.base?s[0]+e.base:s[0],c=n[u]||0,h="".concat(u," ").concat(c);n[u]=c+1;var l=a(h),f={css:s[1],media:s[2],sourceMap:s[3]};-1!==l?(r[l].references++,r[l].updater(f)):r.push({identifier:h,updater:y(f,e),references:1}),i.push(h)}return i}function u(t){var e=document.createElement("style"),i=t.attributes||{};if(void 0===i.nonce){var r=n.nc;r&&(i.nonce=r)}if(Object.keys(i).forEach((function(t){e.setAttribute(t,i[t])})),"function"==typeof t.insert)t.insert(e);else{var a=o(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,h=(c=[],function(t,e){return c[t]=e,c.filter(Boolean).join("\n")});function l(t,e,n,i){var o=n?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(t.styleSheet)t.styleSheet.cssText=h(e,o);else{var r=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(r,a[e]):t.appendChild(r)}}function f(t,e,n){var i=n.css,o=n.media,r=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var p=null,d=0;function y(t,e){var n,i,o;if(e.singleton){var r=d++;n=p||(p=u(e)),i=l.bind(null,n,r,!1),o=l.bind(null,n,r,!0)}else n=u(e),i=f.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i));var n=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var i=0;i<n.length;i++){var o=a(n[i]);r[o].references--}for(var u=s(t,e),c=0;c<n.length;c++){var h=a(n[c]);0===r[h].references&&(r[h].updater(),r.splice(h,1))}n=u}}}},945:(t,e,n)=>{t.exports=n.p+"1ed624324f1885115b4e.png"},944:(t,e,n)=>{t.exports=n.p+"d67ca0a2ca40ce387478.png"},807:(t,e,n)=>{t.exports=n.p+"fb631bccb9d336cf894b.png"},326:(t,e,n)=>{t.exports=n.p+"207781eba39e33f491e9.png"},166:(t,e,n)=>{t.exports=n.p+"9e2b1dc24edefa3f20da.png"},574:(t,e,n)=>{t.exports=n.p+"a9c01d11dedae46f7aa1.png"},845:(t,e,n)=>{t.exports=n.p+"11ccb4e6f66401e6781c.jpg"},52:(t,e,n)=>{t.exports=n.p+"d5f919911b56c59b32fe.png"}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return t[i](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{var t=function(){function t(){this.enabled=!0;var t=window.AudioContext||window.webkitAudioContext;this.audioContext=new t,this.buffer=this.audioContext.createBuffer(1,1*this.audioContext.sampleRate,this.audioContext.sampleRate),this.channelData=this.buffer.getChannelData(0),this.primaryGainControl=this.audioContext.createGain(),this.primaryGainControl.gain.setValueAtTime(.5,0),this.primaryGainControl.connect(this.audioContext.destination)}return t.prototype.initialize=function(){},t.prototype.playNote=function(t,e,n){if(void 0===t&&(t=150),void 0===e&&(e=.2),void 0===n&&(n=""),this.enabled){var i=this.audioContext.createOscillator();n&&(i.type=n),i.frequency.setValueAtTime(t,this.audioContext.currentTime);var o=this.audioContext.createGain();o.gain.setValueAtTime(1,this.audioContext.currentTime),o.gain.linearRampToValueAtTime(.01,this.audioContext.currentTime+e),i.connect(o),o.connect(this.primaryGainControl),i.start(),i.stop(this.audioContext.currentTime+e)}},t.prototype.playCustomSound=function(t,e,n){var i=this;if(void 0===e&&(e=""),this.enabled){var o=this.audioContext.createOscillator();e&&(o.type=e);var r=0;t.forEach((function(t){o.frequency.setValueAtTime(t.f,i.audioContext.currentTime+r+t.t),r+=t.t}));var a=this.audioContext.createGain();return a.gain.setValueAtTime(1,this.audioContext.currentTime),a.gain.linearRampToValueAtTime(.01,this.audioContext.currentTime+r),o.connect(a),a.connect(this.primaryGainControl),n&&(o.onended=n),o.start(),o.stop(this.audioContext.currentTime+r),o}},t.prototype.playCustomSoundNoFall=function(t,e,n){var i=this;if(void 0===e&&(e=""),this.enabled){var o=this.audioContext.createOscillator();e&&(o.type=e);var r=0;t.forEach((function(t){o.frequency.setValueAtTime(t.f,i.audioContext.currentTime+r+t.t),r+=t.t}));var a=this.audioContext.createGain();return a.gain.setValueAtTime(1,this.audioContext.currentTime),o.connect(a),a.connect(this.primaryGainControl),n&&(o.onended=n),o.start(),o.stop(this.audioContext.currentTime+r),o}},t.prototype.loadSound=function(t){return void 0===t&&(t="https://raw.githubusercontent.com/TinaSoltanian/Patatap/master/sounds/bubbles.mp3"),e=this,n=void 0,o=function(){var e,n,i,o;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(r){switch(r.label){case 0:return this.enabled?[4,fetch(t)]:[2];case 1:return[4,r.sent().arrayBuffer()];case 2:return e=r.sent(),[4,this.audioContext.decodeAudioData(e)];case 3:return n=r.sent(),(i=this.audioContext.createBufferSource()).buffer=n,(o=this.audioContext.createGain()).gain.setValueAtTime(1,this.audioContext.currentTime),i.connect(o),o.connect(this.primaryGainControl),i.start(),[2]}}))},new((i=void 0)||(i=Promise))((function(t,r){function a(t){try{u(o.next(t))}catch(t){r(t)}}function s(t){try{u(o.throw(t))}catch(t){r(t)}}function u(e){var n;e.done?t(e.value):(n=e.value,n instanceof i?n:new i((function(t){t(n)}))).then(a,s)}u((o=o.apply(e,n||[])).next())}));var e,n,i,o},t}();function e(t){return Math.floor(Math.random()*t)}function i(t){var e=t.target.getBoundingClientRect();return[t.touches[0].clientX-e.left,t.touches[0].clientY-e.top]}function o(t,e){var n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)}function r(t,e,n){return void 0===n&&(n=!1),n?180*Math.atan2(e.y-t.y,e.x-t.x)/Math.PI:Math.atan2(e.y-t.y,e.x-t.x)}function a(t,e){return{x:Math.cos(t)*e,y:Math.sin(t)*e}}function s(t){return t*(Math.PI/180)}function u(t,e){var n=t.c,i=t.x,o=t.y,r=t.a;n.save(),n.translate(i,o),n.rotate(r*Math.PI/180),e(),n.restore()}function c(t){var e=t.c,n=(t.sprite,t.sx),i=t.sy,o=t.sWidth,r=t.sHeight,a=t.dx,s=t.dy,u=t.dWidth,c=t.dHeight,h=t.img,l=t.flipX,f=t.flipY;e.scale(l?-1:1,f?-1:1),e.drawImage(h,n,i,o,r,a,s,u,c),e.scale(1,1)}function h(t){return e=this,n=void 0,o=function(){var e;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(n){switch(n.label){case 0:return[4,new Promise((function(e,n){var i=new Image;i.onload=function(){e(i)},i.onerror=function(t){n(t)},i.src=t.sprite}))];case 1:return e=n.sent(),t.img=e,[2,t]}}))},new((i=void 0)||(i=Promise))((function(t,r){function a(t){try{u(o.next(t))}catch(t){r(t)}}function s(t){try{u(o.throw(t))}catch(t){r(t)}}function u(e){var n;e.done?t(e.value):(n=e.value,n instanceof i?n:new i((function(t){t(n)}))).then(a,s)}u((o=o.apply(e,n||[])).next())}));var e,n,i,o}function l(t){var e=t.c,n=t.x,i=t.y,o=t.toX,r=t.toY,a=t.strokeWidth,s=t.strokeColor;e.beginPath(),e.moveTo(n,i),e.lineTo(o,r),e.strokeStyle=s,e.lineWidth=a,e.stroke()}function f(t){var e=t.c,n=t.x,i=t.y,o=t.radius,r=t.startAngle,a=t.endAngle,u=t.fillColor,c=t.strokeWidth,h=t.strokeColor;e.beginPath(),e.arc(n,i,o,r?s(r):0,a?s(a):2*Math.PI),u&&(e.fillStyle=u,e.fill()),c&&h&&(e.strokeStyle=h,e.lineWidth=c,e.stroke())}function p(t){var e=t.c,n=t.x,i=t.y,o=t.width,r=t.height,a=t.fillColor,s=t.strokeWidth,u=t.strokeColor;e.beginPath(),e.rect(n,i,o,r),a&&(e.fillStyle=a,e.fill()),s&&u&&(e.strokeStyle=u,e.lineWidth=s,e.stroke())}function d(t){var e=t.c,n=t.x,i=t.y,o=t.fillColor,r=t.strokeWidth,a=t.strokeColor,s=t.text,u=t.fontFamily,c=t.fontSize,h=t.align,l=t.style,f=t.weight;e.textAlign=h||"center",e.font=(l?l+" ":"")+(f?f+" ":"")+c+"px "+u,r&&a&&(e.strokeStyle=a,e.lineWidth=r,e.strokeText(s,n,i)),o&&(e.fillStyle=o,e.fillText(s,n,i))}var y=function(){function e(e){var n=this;this.gameActive=!1,this.lastUpdate=Date.now(),this.updateDiff=Date.now(),this.updateTick=1e3/60,this.diffMulti=this.updateDiff/this.updateTick,this.keyBoardEnabled=!1,this.pressedKeys={},this.mouseEnabled=!1,this.mouseInfo={x:-100,y:-100,mouseDown:!1},this.levels={},this.activeLevel="",this.canvasElement=this.createCanvas(),this.canvasElement.width=e.width?e.width:200,this.gameWidth=this.canvasElement.width,this.canvasElement.height=e.height?e.height:400,this.gameHeight=this.canvasElement.height;var i=e.canvasElementId?document.getElementById(e.canvasElementId):document;i&&i.appendChild(this.canvasElement),this.ctx=this.createContextFromElement(this.canvasElement),this.soundPlayer=new t,e.levels&&e.levels.forEach((function(t){n.levels[t.key]=new t.level({key:t.key,gameRef:n}),""==n.activeLevel&&(n.activeLevel=t.key)})),this.gameLoop=this.gameLoop.bind(this),this.update=this.update.bind(this),this.tick=this.tick.bind(this),this.draw=this.draw.bind(this)}return e.prototype.createCanvas=function(){return document.createElement("canvas")},e.prototype.createContextFromElement=function(t){return t.getContext("2d")},e.prototype.enableMouse=function(){var t=this;this.canvasElement.addEventListener("mousedown",(function(e){t.mouseInfo.mouseDown=!0})),this.canvasElement.addEventListener("mousemove",(function(e){var n;n=function(t){var e=t.target.getBoundingClientRect();return[t.clientX-e.left,t.clientY-e.top]}(e),t.mouseInfo.x=n[0],t.mouseInfo.y=n[1]})),window.addEventListener("mouseup",(function(e){t.mouseInfo.mouseDown=!1})),this.canvasElement.addEventListener("touchstart",(function(e){var n;n=i(e),t.mouseInfo.x=n[0],t.mouseInfo.y=n[1],t.mouseInfo.mouseDown=!0})),this.canvasElement.addEventListener("touchmove",(function(e){var n;n=i(e),t.mouseInfo.x=n[0],t.mouseInfo.y=n[1]})),window.addEventListener("touchend",(function(e){t.mouseInfo.mouseDown=!1}))},e.prototype.enableKeyboard=function(){var t=this;this.keyBoardEnabled||(document.addEventListener("keydown",(function(e){t.pressedKeys[e.code]=!0})),document.addEventListener("keyup",(function(e){t.pressedKeys[e.code]=!1})))},e.prototype.tick=function(){this.updateDiff=Date.now()-this.lastUpdate,this.diffMulti=this.updateDiff/this.updateTick,this.lastUpdate=Date.now()},e.prototype.start=function(){return t=this,e=void 0,i=function(){var t,e;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(n){switch(n.label){case 0:this.drawLoading(),this.soundPlayer.initialize(),this.gameActive=!0,t=0,n.label=1;case 1:return t<Object.keys(this.levels).length?(e=Object.keys(this.levels)[t],this.levels[e].preload?[4,this.levels[e].preload()]:[3,3]):[3,4];case 2:n.sent(),n.label=3;case 3:return t++,[3,1];case 4:return this.levels[this.activeLevel].initialize(),window.requestAnimationFrame(this.gameLoop),[2]}}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},e.prototype.update=function(){this.tick(),this.levels[this.activeLevel].update()},e.prototype.draw=function(){this.levels[this.activeLevel].draw()},e.prototype.drawLoading=function(){this.ctx.beginPath(),this.ctx.rect(0,0,this.gameWidth,this.gameHeight),this.ctx.fillStyle="#eee",this.ctx.fill(),d({c:this.ctx,x:this.gameWidth/2,y:100,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"500",fontFamily:"sans-serif",fontSize:20,text:"Loading Assets"})},e.prototype.loadLevel=function(t){this.levels[this.activeLevel].tearDown(),this.activeLevel=t,this.levels[this.activeLevel].initialize()},e.prototype.gameLoop=function(){this.update(),this.draw(),this.gameActive&&window.requestAnimationFrame(this.gameLoop)},e}(),m=n(379),g=n.n(m),v=n(566);g()(v.Z,{insert:"head",singleton:!1}),v.Z.locals;var x,b=function(){function t(t){this.x=0,this.y=0,this.objectKey=t.key,this.gameRef=t.gameRef,this.initialize=this.initialize.bind(this),this.preload=this.preload.bind(this),this.update=this.update.bind(this),this.draw=this.draw.bind(this),this.tearDown=this.tearDown.bind(this)}return t.prototype.preload=function(){return t=this,e=void 0,i=function(){return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(t){return[2]}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},t.prototype.initialize=function(){},t.prototype.update=function(){},t.prototype.draw=function(){},t.prototype.tearDown=function(){},t}(),w=(x=function(t,e){return(x=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}x(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),A=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.x=0,e.y=0,e.width=100,e.height=50,e.fillColor="#777",e.hoverColor="#333",e.focusColor="#000",e.strokeWidth=0,e.strokeColor="",e.hovered=!1,e.focused=!1,e.textColor="#fff",e.buttonText="Click Me",e.style="",e.weight="bold",e.fontSize=16,e.fontFamily="sans-serif",e.clickFunction=function(){return null},e.holdFunction=function(){return null},e}return w(e,t),e.prototype.initialize=function(){},e.prototype.update=function(){var t=this.x,e=this.y,n=this.x+this.width,i=this.y+this.height,o=this.gameRef.mouseInfo,r=o.x,a=o.y;this.hovered=r>t&&r<n&&a>e&&a<i,this.hovered&&this.gameRef.mouseInfo.mouseDown?(this.focused=!0,this.holdFunction()):this.hovered&&this.focused&&!this.gameRef.mouseInfo.mouseDown?(this.clickFunction(),this.focused=!1):this.focused=!1},e.prototype.draw=function(){p({c:this.gameRef.ctx,x:this.x,y:this.y,width:this.width,height:this.height,fillColor:this.hovered&&this.focused?this.focusColor:this.hovered?this.hoverColor:this.fillColor}),d({c:this.gameRef.ctx,x:(this.x+this.x+this.width)/2,y:(this.y+this.y+this.height)/2+this.fontSize/3,align:"center",fillColor:this.textColor,style:this.style,weight:this.weight,fontFamily:this.fontFamily,fontSize:this.fontSize,text:this.buttonText})},e}(b),k=function(){function t(t){this.levelKey=t.key,this.gameRef=t.gameRef,this.initialize=this.initialize.bind(this),this.update=this.update.bind(this),this.draw=this.draw.bind(this),this.tearDown=this.tearDown.bind(this)}return t.prototype.preload=function(){return t=this,e=void 0,i=function(){return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(t){return[2]}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},t.prototype.initialize=function(){},t.prototype.update=function(){},t.prototype.draw=function(){},t.prototype.tearDown=function(){},t}(),C=n(52),S=[{f:0,t:0},{f:-50,t:1},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2},{f:150,t:.2},{f:350,t:.2},{f:-50,t:.2}],R=[{f:-1150,t:.2},{f:-2150,t:.2},{f:-850,t:.6}],T=[{f:-50,t:.2},{f:-40,t:.2},{f:-16,t:.6}],P=[{f:-50,t:.1},{f:-150,t:.1},{f:1,t:.1},{f:-150,t:.1},{f:-50,t:.1},{f:-150,t:.1},{f:-50,t:.1},{f:-150,t:.1}],E=[{f:0,t:0},{f:-50,t:.2},{f:-150,t:.2},{f:-50,t:.2},{f:1,t:.1},{f:-50,t:.2},{f:-150,t:.2},{f:-50,t:.2},{f:1,t:.1},{f:-50,t:.2},{f:-150,t:.2},{f:-50,t:.2},{f:1,t:.1}],B=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.highScore=0,e.lastScore=0,e.newHighScore=!1,e.activeSound={playing:!1,soundRef:null},e}return B(e,t),e.prototype.preload=function(){return t=this,e=void 0,i=function(){var t;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(e){switch(e.label){case 0:return t=this,[4,h({c:this.gameRef.ctx,sprite:C,sx:0,sy:0,sWidth:this.gameRef.gameWidth,sHeight:this.gameRef.gameHeight,dx:0,dy:0,dWidth:this.gameRef.gameWidth,dHeight:this.gameRef.gameHeight,frame:0,lastUpdate:0,updateDiff:1e3/60*10})];case 1:return t.sprite=e.sent(),[2]}}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},e.prototype.initialize=function(){var t=this;this.soundButton=new A({key:"sound-button",gameRef:this.gameRef}),this.soundButton.fillColor="#333",this.soundButton.hoverColor="#000",this.soundButton.x=this.gameRef.gameWidth/2-50,this.soundButton.y=this.gameRef.gameHeight-30,this.soundButton.buttonText=(this.gameRef.soundPlayer.enabled?"Disable":"Enable")+" Sound",this.soundButton.width=100,this.soundButton.height=20,this.soundButton.fontSize=12,this.soundButton.clickFunction=function(){t.activeSound.playing&&t.activeSound.soundRef&&t.activeSound.soundRef.stop&&t.activeSound.soundRef.stop(),t.gameRef.soundPlayer.enabled=!t.gameRef.soundPlayer.enabled,t.soundButton.buttonText=(t.gameRef.soundPlayer.enabled?"Disable":"Enable")+" Sound"},this.startButton=new A({key:"start-button",gameRef:this.gameRef}),this.startButton.fillColor="#ce192b",this.startButton.x=100,this.startButton.y=this.gameRef.gameHeight-100,this.startButton.buttonText="Go for a Walk",this.startButton.width=this.gameRef.gameWidth-200,this.startButton.clickFunction=function(){t.activeSound.playing&&t.activeSound.soundRef&&t.activeSound.soundRef.stop&&t.activeSound.soundRef.stop(),t.gameRef.soundPlayer.playNote(900,.4,"square"),t.gameRef.loadLevel("walk-1")},this.newHighScore=!1;var e=localStorage.getItem("hi-score-walk"),n=localStorage.getItem("last-score-walk");n&&(this.lastScore=Number(n)),e&&(this.highScore=Number(e)),this.lastScore>this.highScore&&(this.highScore=this.lastScore,this.newHighScore=!0,localStorage.setItem("hi-score-walk",""+this.highScore))},e.prototype.handleSounds=function(){var t=this;0==this.activeSound.playing&&(this.activeSound.soundRef=this.gameRef.soundPlayer.playCustomSound(S,"square",(function(){t.activeSound.playing=!1})),this.activeSound.playing=!0)},e.prototype.update=function(){this.updateBg(),this.handleSounds(),this.startButton.update(),this.soundButton.update()},e.prototype.updateBg=function(){},e.prototype.drawBg=function(){c(this.sprite)},e.prototype.draw=function(){this.gameRef.ctx.beginPath(),this.gameRef.ctx.rect(0,0,this.gameRef.gameWidth,this.gameRef.gameHeight),this.gameRef.ctx.fillStyle="#eee",this.gameRef.ctx.fill(),this.drawBg(),this.startButton.draw(),this.soundButton.draw(),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:100,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"900",fontFamily:"sans-serif",fontSize:40,text:"WALK"}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:140,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"900",fontFamily:"sans-serif",fontSize:40,text:"THE HUMAN"}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:185,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"bold",fontFamily:"sans-serif",fontSize:this.newHighScore?20:16,text:(this.newHighScore?"New High ":"")+"Score: "+this.lastScore}),d({c:this.gameRef.ctx,x:this.gameRef.gameWidth/2,y:210,align:"center",fillColor:"#000",strokeColor:"#fff",strokeWidth:3,style:"",weight:"bold",fontFamily:"sans-serif",fontSize:16,text:"Hi Score: "+this.highScore})},e.prototype.tearDown=function(){this.startButton.tearDown()},e}(k),L=n(944),W=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),H=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.x=0,e.y=0,e.radius=16,e.velocity={x:0,y:0},e.speed=2,e.target={x:200,y:300},e.fillColor="orange",e.activeTarget=!1,e.bonked=!1,e.lastBonk=0,e.bonkLength=500,e.maxSpeed=2,e.bonkSpeed=0,e.bonkCallback=function(){return null},e}return W(e,t),e.prototype.preload=function(){return t=this,e=void 0,i=function(){var t;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(e){switch(e.label){case 0:return t=this,[4,h({c:this.gameRef.ctx,sprite:L,sx:0,sy:0,sWidth:32,sHeight:32,dx:-this.radius,dy:-this.radius,dWidth:32,dHeight:32,frame:0,lastUpdate:0,updateDiff:1e3/60*10})];case 1:return t.sprite=e.sent(),[2]}}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},e.prototype.initialize=function(){this.bonked=!1,this.lastBonk=0},e.prototype.update=function(){var t=this;this.activeTarget?this.moveTo(this.target,(function(){t.activeTarget=!1})):this.bonked&&this.lastBonk+this.bonkLength<this.gameRef.lastUpdate&&(this.bonked=!1),this.updateSprite()},e.prototype.updateSprite=function(){this.sprite.lastUpdate+this.sprite.updateDiff<this.gameRef.lastUpdate&&(this.sprite.frame++,this.sprite.frame>1&&(this.sprite.frame=0),this.sprite.lastUpdate=this.gameRef.lastUpdate,this.sprite.sx=this.sprite.frame*this.sprite.dWidth)},e.prototype.bonk=function(){this.bonked||(this.bonked=!0,this.lastBonk=this.gameRef.lastUpdate,this.velocity={x:0,y:0},this.bonkCallback())},e.prototype.setTarget=function(t){this.target=t,this.activeTarget=!0},e.prototype.moveTo=function(t,e){void 0===e&&(e=function(){});var n=o(this,t);if(n>this.radius){var i=this.speed*this.gameRef.diffMulti;this.velocity={x:i/n*(t.x-this.x),y:i/n*(t.y-this.y)},this.x+=this.velocity.x,this.y+=this.velocity.y}else this.velocity={x:0,y:0},e()},e.prototype.draw=function(t){var e=this;void 0===t&&(t={x:0,y:0}),this.activeTarget&&f({c:this.gameRef.ctx,x:t.x+this.target.x,y:t.y+this.target.y,radius:10,strokeColor:"orange",strokeWidth:2}),u({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,a:0},(function(){e.sprite.flipX=e.velocity.x<0,c(e.sprite)}))},e.prototype.tearDown=function(){},e}(b),O=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),D=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.width=100,e.height=5,e.yOffset=-8,e.xOffset=0,e.x=0,e.y=0,e.current=0,e.max=100,e.lastTick=0,e.tickSize=100,e}return O(e,t),e.prototype.tick=function(t){this.gameRef.lastUpdate>this.lastTick+this.tickSize&&(this.current+=t,this.current<0&&(this.current=0),this.current>this.max&&(this.current=this.max),this.lastTick=this.gameRef.lastUpdate)},e.prototype.draw=function(t){if(void 0===t&&(t={x:0,y:0}),p({c:this.gameRef.ctx,x:t.x+this.x-this.width/2+this.xOffset,y:t.y+this.y-this.height+this.yOffset,width:this.width,height:this.height,fillColor:"white"}),this.current>0){var e=this.current/this.max;p({c:this.gameRef.ctx,x:t.x+this.x-this.width/2+this.xOffset,y:t.y+this.y-this.height+this.yOffset,width:this.width*this.current/this.max,height:this.height,fillColor:e<.5?"green":e<.8?"orange":"red"})}},e}(b),j=n(574),I=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),z=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.x=0,e.y=0,e.target={x:0,y:0},e.targetList=[{x:20,y:50},{x:50,y:150},{x:200,y:350},{x:350,y:50},{x:850,y:400},{x:1250,y:900},{x:1750,y:1500}],e.radius=16,e.fillColor="red",e.targetRadius=10,e.velocity={x:0,y:0},e.speed=1,e.onLastTarget=function(){return null},e.handRadius=3,e.handColor="#F7E09F",e.armLength=11,e.handRotateSpeed=5,e.goHand={x:0,y:0},e.goHandAngle=0,e.leashHand={x:0,y:0},e}return I(e,t),e.prototype.preload=function(){return t=this,e=void 0,i=function(){var t;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(e){switch(e.label){case 0:return t=this,[4,h({c:this.gameRef.ctx,sprite:j,sx:0,sy:0,sWidth:32,sHeight:32,dx:this.x-this.radius,dy:this.y-this.radius,dWidth:32,dHeight:32,frame:0,lastUpdate:0,updateDiff:1e3/60*10})];case 1:return t.sprite=e.sent(),[2]}}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},e.prototype.initialize=function(){this.angerBar=new D({key:"human-anger",gameRef:this.gameRef}),this.angerBar.width=2*this.radius,this.angerBar.yOffset=-this.radius-5},e.prototype.update=function(){var t=this;this.moveTo(this.target,(function(){t.targetList.length>0?t.target=t.targetList.shift():t.onLastTarget()})),this.angerBar.x=this.x,this.angerBar.y=this.y;var e=this.handRotateSpeed*this.gameRef.diffMulti,n=(r(this,this.target,!0)-this.goHandAngle+540)%360-180;n>0?this.goHandAngle=this.goHandAngle%360+(n>e?e:n):n<0&&(this.goHandAngle=this.goHandAngle%360-(n<e?e:-n)),this.goHandAngle<0&&(this.goHandAngle+=360),this.goHand=a(s(this.goHandAngle),this.armLength),this.updateSprite()},e.prototype.updateSprite=function(){this.sprite.lastUpdate+this.sprite.updateDiff<this.gameRef.lastUpdate&&(this.sprite.frame++,this.sprite.frame>1&&(this.sprite.frame=0),this.sprite.lastUpdate=this.gameRef.lastUpdate,this.sprite.sx=this.sprite.frame*this.sprite.dWidth)},e.prototype.moveTo=function(t,e){void 0===e&&(e=function(){});var n=o(this,t);if(n>this.radius){var i=this.speed*this.gameRef.diffMulti;this.velocity={x:i/n*(t.x-this.x),y:i/n*(t.y-this.y)},this.x+=this.velocity.x,this.y+=this.velocity.y}else this.velocity={x:0,y:0},e()},e.prototype.drawPath=function(t,e){var n=this;void 0===t&&(t={x:0,y:0}),void 0===e&&(e=!1),f({c:this.gameRef.ctx,x:t.x+this.target.x,y:t.y+this.target.y,strokeColor:"red",strokeWidth:2,radius:this.targetRadius}),l({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,toX:t.x+this.target.x,toY:t.y+this.target.y,strokeWidth:1,strokeColor:"white"}),this.targetList.length>0&&e&&(l({c:this.gameRef.ctx,x:t.x+this.target.x,y:t.y+this.target.y,toX:this.targetList[0].x,toY:this.targetList[0].y,strokeWidth:1,strokeColor:"white"}),this.targetList.forEach((function(e,i){f({c:n.gameRef.ctx,x:t.x+e.x,y:t.y+e.y,strokeColor:"yellow",strokeWidth:2,radius:n.targetRadius}),i<n.targetList.length-1&&l({c:n.gameRef.ctx,x:t.x+e.x,y:t.y+e.y,toX:t.x+n.targetList[i+1].x,toY:t.y+n.targetList[i+1].y,strokeWidth:1,strokeColor:"white"})})))},e.prototype.draw=function(t){void 0===t&&(t={x:0,y:0}),this.sprite.dx=t.x+this.x-this.radius,this.sprite.dy=t.y+this.y-this.radius,c(this.sprite),f({c:this.gameRef.ctx,x:t.x+this.x+this.goHand.x,y:t.y+this.y+this.goHand.y,fillColor:this.handColor,radius:this.handRadius}),f({c:this.gameRef.ctx,x:t.x+this.x+this.leashHand.x,y:t.y+this.y+this.leashHand.y,fillColor:this.handColor,radius:this.handRadius}),this.angerBar.draw(t)},e.prototype.tearDown=function(){},e}(b),M=n(845),U=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),F=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.x=0,e.y=0,e.radius=12,e.fillColor="yellow",e.active=!0,e.onPickup=function(){return null},e}return U(e,t),e.prototype.preload=function(){return t=this,e=void 0,i=function(){return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(t){return[2]}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},e.prototype.initialize=function(){this.active=!0},e.prototype.update=function(){},e.prototype.tearDown=function(){},e.prototype.draw=function(t){void 0===t&&(t={x:0,y:0}),f({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,radius:this.radius,fillColor:this.fillColor})},e}(b),G=n(945),q=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),N=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.angleSpeed=2,e.angleLow=-90,e.angleHigh=90,e.angleDir=1,e.angle=0,e}return q(e,t),e.prototype.preload=function(){return t=this,e=void 0,i=function(){var t;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(e){switch(e.label){case 0:return t=this,[4,h({c:this.gameRef.ctx,sprite:G,sx:0,sy:0,sWidth:24,sHeight:24,dx:-this.radius,dy:-this.radius,dWidth:24,dHeight:24,frame:0,lastUpdate:0,updateDiff:1e3/60*10})];case 1:return t.sprite=e.sent(),[2]}}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},e.prototype.update=function(){var t=this.angleSpeed*this.gameRef.diffMulti;(this.angle<this.angleLow||this.angle>this.angleHigh)&&(this.angleDir*=-1),this.angle+=t*this.angleDir},e.prototype.draw=function(t){var e=this;void 0===t&&(t={x:0,y:0}),u({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,a:this.angle},(function(){c(e.sprite)}))},e}(F),X=n(326),Y=n(166),K=n(807),V=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),$=function(t){function n(){var e=null!==t&&t.apply(this,arguments)||this;return e.radius=16,e.velocity={x:0,y:0},e.target={x:0,y:0},e.spawnX=0,e.spawnY=0,e.fleeing=!1,e.fleeSpeed=5,e.walkSpeed=1,e.speed=1,e}return V(n,t),n.prototype.preload=function(){return t=this,n=void 0,o=function(){var t;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(n){switch(n.label){case 0:return t=this,[4,h({c:this.gameRef.ctx,sprite:[X,Y,K][e(3)],sx:0,sy:0,sWidth:32,sHeight:32,dx:-this.radius,dy:-this.radius,dWidth:32,dHeight:32,frame:0,lastUpdate:0,updateDiff:1e3/60*10})];case 1:return t.sprite=n.sent(),[2]}}))},new((i=void 0)||(i=Promise))((function(e,r){function a(t){try{u(o.next(t))}catch(t){r(t)}}function s(t){try{u(o.throw(t))}catch(t){r(t)}}function u(t){var n;t.done?e(t.value):(n=t.value,n instanceof i?n:new i((function(t){t(n)}))).then(a,s)}u((o=o.apply(t,n||[])).next())}));var t,n,i,o},n.prototype.initialize=function(){this.active=!0,this.x=this.spawnX,this.y=this.spawnY,this.fleeing=!1,this.speed=this.walkSpeed,this.randomSpawnTarget()},n.prototype.update=function(){var t=this;this.updateSprite(),this.fleeing?this.moveTo(this.target,(function(){t.active=!1})):this.moveTo(this.target,(function(){t.randomSpawnTarget()}))},n.prototype.flee=function(){this.fleeing=!0,this.target={x:this.x+400*(2*e(2)-1),y:this.y+400*(2*e(2)-1)},this.speed=this.fleeSpeed},n.prototype.randomSpawnTarget=function(){this.target={x:this.spawnX+50*(2*e(2)-1),y:this.spawnY+50*(2*e(2)-1)}},n.prototype.moveTo=function(t,e){void 0===e&&(e=function(){});var n=o(this,t);if(n>this.radius){var i=this.speed*this.gameRef.diffMulti;this.velocity={x:i/n*(t.x-this.x),y:i/n*(t.y-this.y)},this.x+=this.velocity.x,this.y+=this.velocity.y}else this.velocity={x:0,y:0},e()},n.prototype.updateSprite=function(){this.sprite.lastUpdate+this.sprite.updateDiff<this.gameRef.lastUpdate&&(this.sprite.frame++,this.sprite.frame>1&&(this.sprite.frame=0),this.sprite.lastUpdate=this.gameRef.lastUpdate,this.sprite.sx=this.sprite.frame*this.sprite.dWidth)},n.prototype.draw=function(t){var e=this;void 0===t&&(t={x:0,y:0}),u({c:this.gameRef.ctx,x:t.x+this.x,y:t.y+this.y,a:0},(function(){e.sprite.flipX=e.velocity.x<0,c(e.sprite)}))},n}(F),J=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Z=function(t){function n(){var e=null!==t&&t.apply(this,arguments)||this;return e.activeSound={playing:!1,soundRef:null},e.pickupList=[],e.duckList=[],e.maxDistance=100,e.cameraPos={x:0,y:0},e.levelWidth=2e3,e.levelHeight=2e3,e.score=0,e.scoreSpeed=100,e.lastScore=0,e.scoreTick=200,e.leashed=!0,e}return J(n,t),n.prototype.preload=function(){return t=this,e=void 0,i=function(){var t,e,n=this;return function(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}(this,(function(i){switch(i.label){case 0:return t=this,[4,h({c:this.gameRef.ctx,sprite:M,sx:0,sy:0,sWidth:this.gameRef.gameWidth,sHeight:this.gameRef.gameHeight,dx:0,dy:0,dWidth:this.gameRef.gameWidth,dHeight:this.gameRef.gameHeight,frame:0})];case 1:return t.bgSprite=i.sent(),this.human=new z({key:"human",gameRef:this.gameRef}),[4,this.human.preload()];case 2:return i.sent(),this.animal=new H({key:"animal",gameRef:this.gameRef}),[4,this.animal.preload()];case 3:i.sent(),this.pickupList=[{x:350,y:100},{x:250,y:500},{x:290,y:920},{x:250,y:700},{x:780,y:260},{x:745,y:940},{x:620,y:1400},{x:1275,y:180},{x:1275,y:180},{x:950,y:1660},{x:1650,y:1140},{x:1440,y:1685}].map((function(t,e){var i=new N({key:"pickup-"+e,gameRef:n.gameRef});return i.x=t.x,i.y=t.y,i.onPickup=function(){i.active=!1,n.score+=1e3,n.gameRef.soundPlayer.playCustomSound(R,"square",(function(){return null}))},i})),e=0,i.label=4;case 4:return e<this.pickupList.length?[4,this.pickupList[e].preload()]:[3,7];case 5:i.sent(),i.label=6;case 6:return e++,[3,4];case 7:this.duckList=[{x:90,y:340},{x:200,y:785},{x:160,y:1330},{x:685,y:175},{x:790,y:720},{x:655,y:1870},{x:1535,y:126},{x:1454,y:690},{x:1095,y:1440},{x:1880,y:380},{x:1820,y:873},{x:1700,y:1760}].map((function(t,e){var i=new $({key:"duck-"+e,gameRef:n.gameRef});return i.x=t.x,i.y=t.y,i.spawnX=t.x,i.spawnY=t.y,i.onPickup=function(){i.flee(),n.score+=4e3,n.gameRef.soundPlayer.playCustomSound(R,"square",(function(){return null}))},i})),e=0,i.label=8;case 8:return e<this.duckList.length?[4,this.duckList[e].preload()]:[3,11];case 9:i.sent(),i.label=10;case 10:return e++,[3,8];case 11:return[2]}}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{u(i.next(t))}catch(t){r(t)}}function s(t){try{u(i.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}));var t,e,n,i},n.prototype.initialize=function(){var t=this;this.score=0,this.human.initialize(),this.human.x=100,this.human.y=100,this.human.target={x:this.human.x,y:this.human.y},this.human.targetList=[{x:300,y:300},{x:530,y:615},{x:520,y:1025},{x:470,y:1700},{x:770,y:1430},{x:960,y:1050},{x:1150,y:700},{x:1400,y:450},{x:1750,y:300},{x:1640,y:645},{x:1445,y:670},{x:1420,y:970},{x:1410,y:1370},{x:1710,y:1500}],this.human.onLastTarget=function(){t.activeSound.playing&&t.activeSound.soundRef&&t.activeSound.soundRef.stop&&t.activeSound.soundRef.stop(),localStorage.setItem("last-score-walk",""+Math.round(t.score)),t.gameRef.loadLevel("start-screen")},this.animal.initialize(),this.animal.x=150,this.animal.y=150,this.animal.bonkCallback=function(){t.gameRef.soundPlayer.playCustomSound(T,"square",(function(){return null})),t.animal.target=t.human,t.animal.activeTarget=!0,t.score/=2},this.pickupList.forEach((function(t){t.initialize()})),this.duckList.forEach((function(t){t.initialize()}))},n.prototype.handleSounds=function(){var t=this;0==this.activeSound.playing&&(this.activeSound.soundRef=this.gameRef.soundPlayer.playCustomSoundNoFall(this.leashed?E:P,"square",(function(){t.activeSound.playing=!1})),this.activeSound.playing=!0)},n.prototype.updateScore=function(t){this.scoreTick+this.lastScore<this.gameRef.lastUpdate&&(this.score+=t,this.score<0&&(this.score=0),this.lastScore=this.gameRef.lastUpdate)},n.prototype.update=function(){var t=this;this.updateBg(),this.handleSounds(),this.human.update(),this.animal.update();var n=this.scoreSpeed*this.gameRef.diffMulti,i=o(this.human,this.animal);if(this.leashed)if(this.human.speed=1,i>this.maxDistance){var s=a(r(this.human,this.animal),this.maxDistance);this.animal.x=this.human.x+s.x+this.human.velocity.x,this.animal.y=this.human.y+s.y+this.human.velocity.y,this.human.x+=this.animal.velocity.x-this.human.velocity.x,this.human.y+=this.animal.velocity.y-this.human.velocity.y,this.human.angerBar.tick(5),this.updateScore(2*-n),this.human.angerBar.current==this.human.angerBar.max&&(e(9)<5?(this.animal.bonk(),this.human.angerBar.current-=25):(this.leashed=!1,this.human.targetList.unshift({x:this.human.target.x,y:this.human.target.y}),this.human.target=this.animal))}else this.human.angerBar.tick(-1),this.animal.bonked||this.updateScore(n);else this.human.speed=2.1,this.updateScore(2*n),i<this.human.radius+this.animal.radius-8&&(this.leashed=!0,this.score*=1.5,this.animal.bonk());this.animal.bonked&&(this.animal.x+=this.human.velocity.x,this.animal.y+=this.human.velocity.y),this.gameRef.mouseInfo.mouseDown&&!this.animal.bonked&&this.animal.setTarget({x:this.gameRef.mouseInfo.x-this.cameraPos.x,y:this.gameRef.mouseInfo.y-this.cameraPos.y});var u=r(this.human,this.animal);this.human.leashHand=a(u,this.human.armLength),this.pickupList.forEach((function(e){e.active&&(o(e,t.animal)<t.animal.radius+e.radius&&e.onPickup(),e.update())})),this.duckList.forEach((function(e){e.active&&!e.fleeing?(o(e,t.animal)<t.animal.radius+e.radius&&e.onPickup(),e.update()):e.fleeing&&e.update()})),this.updateCamera()},n.prototype.updateBg=function(){},n.prototype.drawBg=function(){this.bgSprite.sx=-this.cameraPos.x,this.bgSprite.sy=-this.cameraPos.y,c(this.bgSprite)},n.prototype.drawLeash=function(t){t.beginPath(),t.moveTo(this.cameraPos.x+this.human.x+this.human.leashHand.x,this.cameraPos.y+this.human.y+this.human.leashHand.y),t.quadraticCurveTo(this.cameraPos.x+(this.human.x+this.animal.x)/2,this.cameraPos.y+(this.human.y+this.animal.y)/2+(this.maxDistance-o(this.human,this.animal)),this.cameraPos.x+this.animal.x,this.cameraPos.y+this.animal.y),t.strokeStyle="#eee",t.lineWidth=3,t.stroke()},n.prototype.updateCamera=function(){this.cameraPos={x:-(this.animal.x-this.gameRef.gameWidth/2),y:-(this.animal.y-this.gameRef.gameHeight/2)},this.gameRef.gameWidth<this.levelWidth?(this.cameraPos.x>0&&(this.cameraPos.x=0),this.cameraPos.x-this.gameRef.gameWidth<-1*this.levelWidth&&(this.cameraPos.x=-(this.levelWidth-this.gameRef.gameWidth))):this.cameraPos.x=(this.gameRef.gameWidth-this.levelWidth)/2,this.gameRef.gameHeight<this.levelHeight?(this.cameraPos.y>0&&(this.cameraPos.y=0),this.cameraPos.y-this.gameRef.gameHeight<-1*this.levelHeight&&(this.cameraPos.y=-(this.levelHeight-this.gameRef.gameHeight))):this.cameraPos.y=(this.gameRef.gameHeight-this.levelHeight)/2},n.prototype.draw=function(){var t=this;this.gameRef.ctx.beginPath(),this.gameRef.ctx.rect(0,0,this.gameRef.gameWidth,this.gameRef.gameHeight),this.gameRef.ctx.fillStyle="#333",this.gameRef.ctx.fill(),this.drawBg(),this.pickupList.forEach((function(e){e.active&&e.draw(t.cameraPos)})),this.duckList.forEach((function(e){e.active&&e.draw(t.cameraPos)})),this.human.draw(this.cameraPos),this.leashed&&this.drawLeash(this.gameRef.ctx),this.animal.draw(this.cameraPos),d({c:this.gameRef.ctx,x:20,y:28,fontSize:16,fontFamily:"sans-serif",fillColor:"black",weight:"bold",strokeColor:"white",strokeWidth:5,align:"left",text:"Score: "+(this.score>0?Math.round(this.score):0)})},n.prototype.tearDown=function(){},n}(k),Q=document.getElementById("start-game"),tt=document.getElementById("game-description"),et=document.getElementById("audio-b");Q&&et&&et&&Q.addEventListener("click",(function(){var t;tt.remove(),et.play(),(t=new y({canvasElementId:"game-container",width:window.innerWidth>400?400:window.innerWidth,height:window.innerHeight>400?400:window.innerHeight,levels:[{key:"start-screen",level:_},{key:"walk-1",level:Z}]})).enableMouse(),t.enableKeyboard(),t.start(),Q.remove(),setTimeout((function(){et.remove()}),500)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,